name: Run Build and Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      publish_artifacts:
        description: 'Publish artifacts'
        required: true
        default: 'true'
  schedule:
    - cron: '0 0 * * 0'

jobs:
  main:
    runs-on: ${{ matrix.environment }}
    strategy:
      matrix:
        environment:
          - ubuntu-latest
      fail-fast: false
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages
    steps:
      - name: 📝 Fetch Sources 📝
        uses: actions/checkout@v4

      - name: 🛠 Build Sdk 🛠
        shell: bash
        run: dotnet build -c Release src/sdk/FStarLang.Sdk.csproj

      - name: 🛠 Build Runtime win-x64 🛠
        shell: bash
        run: dotnet build -r win-x64 -c Release src/runtime/FStarLang.Runtime.csproj

      - name: 🛠 Build Runtime linux-x64 🛠
        shell: bash
        run: dotnet build -r linux-x64 -c Release src/runtime/FStarLang.Runtime.csproj

      - name: 🛠 Build Runtime osx-x64 🛠
        shell: bash
        run: dotnet build -r osx-x64 -c Release src/runtime/FStarLang.Runtime.csproj

      - name: 🛠 Pack ProjectTemplates 🛠
        shell: bash
        run: dotnet pack -c Release src/templates/FStarLang.DotNet.Common.ProjectTemplates.1.0.csproj

      - name: 🛠 Publish templates 🛠
        shell: bash
        run:
            echo ${{ secrets.AZ_DEVOPS_KEY }} 
            dotnet nuget push "artifacts/package/release/*.nupkg" --source fstarlang --api-key ${{ secrets.AZ_DEVOPS_KEY }} --skip-duplicate
        if: github.event_name == 'push' || github.event.inputs.publish_artifacts == 'true'
        env:
          AZ_DEVOPS_KEY: ${{ secrets.AZ_DEVOPS_KEY }}
